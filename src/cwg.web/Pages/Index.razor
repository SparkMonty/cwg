@page "/"

@using System;
@using cwg.web.Data;
@using cwg.web.Generators
@using cwg.web.Repositories

@inject NavigationManager NavigationManager
@inject GeneratorsService GeneratorService
@inject GeneratorRepository Repository

<section class="h-100">
    <header class="container h-100">
        <div class="d-flex align-items-center justify-content-center h-100">
            <div class="d-flex flex-column">
                @if (_generators != null && _requestModel != null)
                {
                <EditForm Model="_requestModel" OnValidSubmit="HandleValidSubmit">
                    <h2><a @onclick="Refresh">cwg</a></h2>

                    @if (_responseModel == null)
                    {
                        <div class="form-group">
                            <label for="fileType">sample type</label>

                            <InputSelect id="fileType" name="fileType" class="form-control dark" style="max-width: 200px; margin: 0 auto; text-align: center" @bind-CurrentValueAsString="_requestModel.FileType" @bind-Value="_requestModel.FileType">
                                @foreach (var generator in _generators)
                                        {
                                    <option value="@generator.Name">@generator.Name</option>
                                        }
                            </InputSelect>

                            <label for="numberToGenerate">quantity to generate</label>
                            <InputNumber @bind-Value="_requestModel.NumberToGenerate" id="numberToGenerate" name="numberToGenerate" type="number" min="1" max="500" step="1" placeholder="number to generate" class="form-control" style="max-width: 200px; text-align: center; margin: 0 auto" />
                        </div>
                        <div class="form-group">
                            <button type="submit" class="btn-lg btn-primary">generate sample(s)</button>
                        </div>
                    }

                    @if (_responseModel != null)
                    {
                        <h4>Generated @_responseModel.FileType file (@_responseModel.SHA1)</h4>

                        <a href="/file/@_responseModel.FileName" role="button" class="btn btn-info btn-lg">Download File</a><br /><br />

                        <button @onclick="GenerateOneMore" class="btn btn-success">generate one more</button><br /><br/>

                        <button @onclick="Refresh" class="btn btn-warning">go home | reset generator</button>
                    }
                </EditForm>
                }

                <p>
                    Created by <a href="http://www.jarredcapellman.com" target="_blank">Jarred Capellman</a><br />
                    source code is on <a href="https://github.com/jcapellman/cwg" target="_blank">github</a><br/>
                    Version 2020.8.1
                </p>
            </div>
        </div>
    </header>
</section>

@functions
{
    protected void GenerateOneMore()
    {
        HandleValidSubmit();
    }

    protected void Refresh()
    {
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }
}

@code {
    private GenerationResponseModel _responseModel = null;

    private GenerationRequestModel _requestModel = new GenerationRequestModel();

    private void HandleValidSubmit()
    {
        _responseModel = GeneratorService.GenerateFile(_requestModel);
    }

    private IEnumerable<BaseGenerator> _generators;

    protected override void OnInitialized()
    {
        _generators = GeneratorRepository.GetGenerators();

        _requestModel = new GenerationRequestModel();

        _requestModel.FileType = _generators.FirstOrDefault().Name;
    }
}